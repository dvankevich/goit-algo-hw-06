import networkx as nx
import matplotlib.pyplot as plt
import math

def haversine_distance(lat1, lon1, lat2, lon2):
    """
    Обчислює відстань у кілометрах між двома точками
    за заданими географічними координатами (широта, довгота)
    за формулою Хаверсина.
    """
    R = 6371  # Радіус Землі в кілометрах

    lat1_rad = math.radians(lat1)
    lon1_rad = math.radians(lon1)
    lat2_rad = math.radians(lat2)
    lon2_rad = math.radians(lon2)

    dlon = lon2_rad - lon1_rad
    dlat = lat2_rad - lat1_rad

    a = math.sin(dlat / 2)**2 + math.cos(lat1_rad) * math.cos(lat2_rad) * math.sin(dlon / 2)**2
    c = 2 * math.atan2(math.sqrt(a), math.sqrt(1 - a))

    distance = R * c
    return distance

def create_city_graph(coordinates_data, distances_table):
    """
    Створює граф NetworkX на основі даних про міста та відстані.

    Параметри:
    coordinates_data (dict): Словник {назва_міста: (широта, довгота)}.
    distances_table (dict): Словник {місто1: {місто2: відстань}}.

    Повертає:
    networkx.Graph: Створений граф.
    """
    G = nx.Graph()

    # Додаємо вузли (міста) до графу
    for city in coordinates_data:
        G.add_node(city)

    # Додаємо ребра (дорожні відстані) до графу
    for city1, connected_cities in distances_table.items():
        for city2, dist in connected_cities.items():
            # Додаємо ребро, якщо воно ще не існує (щоб уникнути дублікатів)
            if not G.has_edge(city1, city2):
                G.add_edge(city1, city2, weight=dist)
    
    return G

def visualize_city_graph(graph, coordinates_data, title="Граф відстаней між містами України", save_path=None, show=True):
    """
    Візуалізує граф міст на основі їхніх географічних координат,
    може зберегти візуалізацію у файл та контролювати відображення.
    Київ буде в центрі графу.

    Параметри:
    graph (networkx.Graph): Граф для візуалізації.
    coordinates_data (dict): Словник {назва_міста: (широта, довгота)}.
    title (str): Заголовок для графу.
    save_path (str, optional): Шлях до файлу для збереження візуалізації
                               (наприклад, "city_graph.png").
                               Якщо None, візуалізація не зберігається.
    show (bool): Якщо True, графік буде показано у вікні. Якщо False,
                 графік не буде відображатися, що корисно при збереженні
                 без негайного показу. За замовчуванням True.
    """
    kyiv_lat, kyiv_lon = coordinates_data["Київ"]
    pos = {}
    for city, (lat, lon) in coordinates_data.items():
        pos[city] = ((lon - kyiv_lon) * 80, (lat - kyiv_lat) * 100)

    plt.figure(figsize=(28, 24))
    nx.draw_networkx_nodes(graph, pos, node_size=1500, node_color="skyblue", edgecolors="black")
    nx.draw_networkx_edges(graph, pos, width=0.8, alpha=0.6, edge_color="gray")
    nx.draw_networkx_labels(graph, pos, font_size=10, font_color="darkblue", font_weight="bold")
    edge_labels = nx.get_edge_attributes(graph, 'weight')
    nx.draw_networkx_edge_labels(graph, pos, edge_labels=edge_labels, font_size=6, font_color="red")
    
    plt.title(title, size=18)
    plt.axis('equal')
    plt.axis('off')

    if save_path:
        try:
            plt.savefig(save_path, bbox_inches='tight', dpi=300)
            print(f"Візуалізацію успішно збережено у: {save_path}")
        except Exception as e:
            print(f"Помилка при збереженні візуалізації: {e}")

    if show:
        plt.show()
    else:
        plt.close() # Закриваємо фігуру, якщо її не потрібно показувати


coordinates_data = {
    "Вінниця": (49.2328, 28.4820),
    "Дніпро": (48.4647, 35.0462),
    "Донецьк": (48.0159, 37.8029),
    "Житомир": (50.2610, 28.6550),
    "Запоріжжя": (47.8388, 35.1390),
    "Івано-Франківськ": (48.9220, 24.7100),
    "Київ": (50.4501, 30.5234),
    "Кропивницький": (48.5104, 32.2620),
    "Луганськ": (48.5730, 39.3095),
    "Луцьк": (50.7479, 25.3252),
    "Львів": (49.8397, 24.0297),
    "Миколаїв": (47.1001, 31.9622),
    "Одеса": (46.4825, 30.7233),
    "Полтава": (49.5883, 34.5510),
    "Рівне": (50.6193, 26.2518),
    "Сімферополь": (44.9521, 34.1108),
    "Суми": (50.9070, 34.7983),
    "Тернопіль": (49.5535, 25.5944),
    "Ужгород": (48.6204, 22.2965),
    "Харків": (49.9935, 36.2304),
    "Херсон": (46.6354, 32.6170),
    "Хмельницький": (49.4144, 27.0059),
    "Черкаси": (49.4444, 32.0590),
    "Чернівці": (48.2915, 25.9375),
    "Чернігів": (51.4911, 31.3073)
}

distances_from_table = {
    "Вінниця": {"Дніпро": 571, "Донецьк": 812, "Житомир": 126, "Запоріжжя": 637, "Івано-Франківськ": 373, "Київ": 266, "Кропивницький": 317, "Луганськ": 972, "Луцьк": 387, "Львів": 369, "Миколаїв": 466, "Одеса": 429, "Полтава": 576, "Рівне": 313, "Сімферополь": 801, "Суми": 611, "Тернопіль": 239, "Ужгород": 593, "Харків": 720, "Херсон": 533, "Хмельницький": 122, "Черкаси": 340, "Чернівці": 312, "Чернігів": 423},
    "Дніпро": {"Донецьк": 250, "Житомир": 630, "Запоріжжя": 89, "Івано-Франківськ": 952, "Київ": 479, "Кропивницький": 246, "Луганськ": 401, "Луцьк": 888, "Львів": 948, "Миколаїв": 329, "Одеса": 463, "Полтава": 183, "Рівне": 814, "Сімферополь": 458, "Суми": 366, "Тернопіль": 818, "Ужгород": 1172, "Харків": 222, "Херсон": 316, "Хмельницький": 701, "Черкаси": 326, "Чернівці": 891, "Чернігів": 585},
    "Донецьк": {"Житомир": 880, "Запоріжжя": 243, "Івано-Франківськ": 1202, "Київ": 729, "Кропивницький": 496, "Луганськ": 151, "Луцьк": 1138, "Львів": 1198, "Миколаїв": 579, "Одеса": 713, "Полтава": 391, "Рівне": 1064, "Сімферополь": 571, "Суми": 488, "Тернопіль": 1068, "Ужгород": 1422, "Харків": 283, "Херсон": 535, "Хмельницький": 951, "Черкаси": 576, "Чернівці": 1141, "Чернігів": 826},
    "Житомир": {"Запоріжжя": 719, "Івано-Франківськ": 459, "Київ": 140, "Кропивницький": 434, "Луганськ": 987, "Луцьк": 261, "Львів": 407, "Миколаїв": 592, "Одеса": 555, "Полтава": 494, "Рівне": 187, "Сімферополь": 927, "Суми": 485, "Тернопіль": 325, "Ужгород": 679, "Харків": 638, "Херсон": 659, "Хмельницький": 208, "Черкаси": 352, "Чернівці": 398, "Чернігів": 297},
    "Запоріжжя": {"Івано-Франківськ": 1018, "Київ": 568, "Кропивницький": 314, "Луганськ": 394, "Луцьк": 977, "Львів": 1014, "Миколаїв": 352, "Одеса": 486, "Полтава": 277, "Рівне": 903, "Сімферополь": 371, "Суми": 460, "Тернопіль": 884, "Ужгород": 1238, "Харків": 303, "Херсон": 292, "Хмельницький": 767, "Черкаси": 415, "Чернівці": 957, "Чернігів": 674},
    "Івано-Франківськ": {"Київ": 599, "Кропивницький": 698, "Луганськ": 1353, "Луцьк": 273, "Львів": 135, "Миколаїв": 785, "Одеса": 658, "Полтава": 953, "Рівне": 292, "Сімферополь": 1124, "Суми": 944, "Тернопіль": 137, "Ужгород": 301, "Харків": 1097, "Херсон": 856, "Хмельницький": 251, "Черкаси": 721, "Чернівці": 143, "Чернігів": 756},
    "Київ": {"Кропивницький": 299, "Луганськ": 836, "Луцьк": 398, "Львів": 544, "Миколаїв": 517, "Одеса": 480, "Полтава": 343, "Рівне": 324, "Сімферополь": 852, "Суми": 339, "Тернопіль": 465, "Ужгород": 819, "Харків": 487, "Херсон": 584, "Хмельницький": 348, "Черкаси": 201, "Чернівці": 538, "Чернігів": 151},
    "Кропивницький": {"Луганськ": 647, "Луцьк": 692, "Львів": 694, "Миколаїв": 180, "Одеса": 337, "Полтава": 251, "Рівне": 618, "Сімферополь": 524, "Суми": 434, "Тернопіль": 564, "Ужгород": 918, "Харків": 395, "Херсон": 251, "Хмельницький": 447, "Черкаси": 126, "Чернівці": 637, "Чернігів": 436},
    "Луганськ": {"Луцьк": 1245, "Львів": 1349, "Миколаїв": 730, "Одеса": 864, "Полтава": 493, "Рівне": 1171, "Сімферополь": 722, "Суми": 535, "Тернопіль": 1219, "Ужгород": 1573, "Харків": 303, "Херсон": 686, "Хмельницький": 1102, "Черкаси": 727, "Чернівці": 1292, "Чернігів": 873},
    "Луцьк": {"Львів": 152, "Миколаїв": 853, "Одеса": 816, "Полтава": 752, "Рівне": 70, "Сімферополь": 1188, "Суми": 743, "Тернопіль": 164, "Ужгород": 432, "Харків": 896, "Херсон": 920, "Хмельницький": 268, "Черкаси": 610, "Чернівці": 336, "Чернігів": 555},
    "Львів": {"Миколаїв": 843, "Одеса": 743, "Полтава": 898, "Рівне": 215, "Сімферополь": 1178, "Суми": 889, "Тернопіль": 127, "Ужгород": 278, "Харків": 1042, "Херсон": 910, "Хмельницький": 247, "Черкаси": 717, "Чернівці": 278, "Чернігів": 701},
    "Миколаїв": {"Одеса": 134, "Полтава": 488, "Рівне": 779, "Сімферополь": 339, "Суми": 671, "Тернопіль": 713, "Ужгород": 1067, "Харків": 551, "Херсон": 71, "Хмельницький": 596, "Черкаси": 368, "Чернівці": 642, "Чернігів": 671},
    "Одеса": {"Полтава": 596, "Рівне": 742, "Сімферополь": 473, "Суми": 779, "Тернопіль": 676, "Ужгород": 959, "Харків": 685, "Херсон": 205, "Хмельницький": 559, "Черкаси": 453, "Чернівці": 515, "Чернігів": 634},
    "Полтава": {"Рівне": 678, "Сімферополь": 631, "Суми": 185, "Тернопіль": 819, "Ужгород": 1173, "Харків": 144, "Херсон": 499, "Хмельницький": 702, "Черкаси": 271, "Чернівці": 892, "Чернігів": 412},
    "Рівне": {"Сімферополь": 1114, "Суми": 669, "Тернопіль": 158, "Ужгород": 495, "Харків": 823, "Херсон": 846, "Хмельницький": 195, "Черкаси": 536, "Чернівці": 331, "Чернігів": 481},
    "Сімферополь": {"Суми": 814, "Тернопіль": 1048, "Ужгород": 1402, "Харків": 657, "Херсон": 279, "Хмельницький": 931, "Черкаси": 649, "Чернівці": 981, "Чернігів": 959},
    "Суми": {"Тернопіль": 810, "Ужгород": 1164, "Харків": 185, "Херсон": 682, "Хмельницький": 693, "Черкаси": 343, "Чернівці": 883, "Чернігів": 338},
    "Тернопіль": {"Ужгород": 353, "Харків": 963, "Херсон": 780, "Хмельницький": 117, "Черкаси": 587, "Чернівці": 176, "Чернігів": 622},
    "Ужгород": {"Харків": 1317, "Херсон": 1134, "Хмельницький": 417, "Черкаси": 941, "Чернівці": 444, "Чернігів": 976},
    "Харків": {"Херсон": 538, "Хмельницький": 846, "Черкаси": 415, "Чернівці": 1036, "Чернігів": 523},
    "Херсон": {"Хмельницький": 663, "Черкаси": 411, "Чернівці": 713, "Чернігів": 738},
    "Хмельницький": {"Черкаси": 470, "Чернівці": 190, "Чернігів": 505},
    "Черкаси": {"Чернівці": 660, "Чернігів": 311},
    "Чернівці": {"Чернігів": 695}
}

# --- Виконання: Створення та візуалізація графу ---
if __name__ == "__main__":
    ukraine_graph = create_city_graph(coordinates_data, distances_from_table)

    # Приклад використання: показати графік 
    visualize_city_graph(ukraine_graph, coordinates_data,
                         title="Карта доріг України ",
                         show=True)

    # Приклад використання: тільки зберегти графік (без відображення вікна)
    visualize_city_graph(ukraine_graph, coordinates_data,
                         title="Карта доріг України",
                         save_path="ukraine_map.png",
                         show=False)